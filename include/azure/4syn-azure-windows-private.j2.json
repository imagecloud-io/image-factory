{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "adminPublicKey": {
            "type": "string"
        },
        "vmName": {
            "type": "string"
        },
        "vmSize": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "vnetResourceGroup": {
            "type": "string"
        },
        "nicName": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "subnetPrefix": {
            "type": "string"
        },
        "addressPrefix": {
            "type": "string"
        },
        "imagePublisher": {
            "type": "string"
        },
        "imageOffer": {
            "type": "string"
        },
        "imageSku": {
            "type": "string"
        },
        "imageVersion": {
            "type": "string"
        },
        "storageAccountType": {
            "type": "string"
        },
        "dataDiskGB": {
            "type": "string"
        },
        "dataDiskHostCaching": {
            "type": "string"
        }
    },
    "variables": {
        "apiVersion": "2015-06-15",
        "publicIPAddressType": "Dynamic",
        "privateIPAddressType": "Dynamic",
        "vnetID": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('subnetName'))]",
        "hostDNSNameScriptArgument": "[concat('*.',resourceGroup().location,'.cloudapp.azure.com')]"
    },
    "resources": [{
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('nicName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [{
                    "name": "ipconfig1",
                    "properties": {
                        "privateIPAllocationMethod": "[variables('privateIPAddressType')]",
                        "subnet": {
                            "id": "[variables('subnetRef')]"
                        }
                    }
                }]
            }
        },
        {
            "type": "Microsoft.Compute/disks",
            "name": "[concat(parameters('vmName'),'_dataDisk1')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "creationData": {
                    "createOption": "Empty"
                },
                "accountType": "[parameters('storageAccountType')]",
                "diskSizeGB": "[parameters('dataDiskGB')]"
            }
        },
        {
            "name": "[parameters('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('nicName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "[parameters('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName'),'_OsDisk')]",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('storageAccountType')]"
                        }
                    },
                    "dataDisks": [{
                        "lun": "0",
                        "caching": "[parameters('dataDiskHostCaching')]",
                        "createOption": "Attach",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('vmName'),'_dataDisk1'))]"
                        }
                    }]
                },
                "networkProfile": {
                    "networkInterfaces": [{
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
                    }]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/EnableWinRM')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "settings": {
                    "fileUris": [
                        "https://imagecloudfiles.blob.core.windows.net/imagecloudfiles/ConfigureRemotingForAnsible.ps1",
                    ],
                    "commandToExecute": "powershell -ExecutionPolicy Unrestricted -file ConfigureRemotingForAnsible.ps1"
                }
            }
        }
    ]
}
