---
  - name: make sure we can reach the internet
    win_command: "{{ 'netsh winhttp set proxy ' + cloud_params.proxy_host + ':' + cloud_params.proxy_port + ' ' + cloud_params.win_proxy_bypass|default('') }}"
    when: cloud_params.proxy_host is defined

  - name: Create temp dir for include
    win_tempfile:
      state: directory
      prefix: imagecloud-libraries
    changed_when: False
    register: _tmpdir

  - name: Get temp dir
    set_fact:
      role_tmpdir: "{{ _tmpdir.path }}"

#  - name: Configure Windows repair source
#    win_regedit:
#      path: HKLM:\Software\Microsoft\Windows\CurrentVersion\policies\Servicing
#      type: dword
#      name: RepairContentServerSource
#      data: 2
#      state: present
#    when: cloud_params.wsus.wsus_client_enable

  - block:
    - name: Install .Net 3.5 feature on Azure Win2012r2 - Copy sources
      win_get_url:
        url: "{{ files_download_url }}/{{ item }}"
        dest: "{{ role_tmpdir }}/{{ item }}"
      changed_when: False
      with_items:
        - net35sxs.zip

    - name: Create sources file
      win_file:
        path: "{{ role_tmpdir +'\\sources\\sxs' }}"
        state: directory

    - name: Extract .NET 3.5 sources
      win_unzip:
        src: "{{ role_tmpdir + '\\net35sxs.zip' }}"
        dest: "{{ role_tmpdir + '\\sources\\sxs' }}"

    - name: Install .Net 3.5 feature
      win_feature:
        name: Net-Framework-Core
        state: present
        source: "{{ role_tmpdir +'\\sources\\sxs' }}"

    when: ansible_os_name is match("Microsoft\ Windows\ Server\ 2012\ R2.*") and cloud_params.type in [ "azure" ]

  - name: Install .Net 3.5 feature
    win_feature:
      name: Net-Framework-Core
      state: present
    when: not ansible_os_name is match("Microsoft\ Windows\ Server\ 2012\ R2.*") or cloud_params.type not in [ "azure" ]

  - name: Get .NET framework version from registry
    win_reg_stat:
      path: HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full
      name: Release
    register: dotnetver

  - block:
    - name: Copy files to VM
      win_get_url:
        url: "{{ files_download_url }}/{{ item }}"
        dest: "{{ role_tmpdir }}/{{  item }}"
      changed_when: False
      with_items:
        - dotNet47.exe

    - name: install .Net Framework 4.7
      win_command: "{{ role_tmpdir + '\\dotNet47.exe /q /norestart' }}"
      register: result
      failed_when: result.rc not in [0, 3010]

    - name: Reboot VM
      win_reboot:
        shutdown_timeout_sec: 3600
        reboot_timeout_sec: 3600
      when: result.rc in [ 3010 ]

    when: dotnetver.value not in [ 460798, 460805 ]

  - block:
    - name: Copy files to VM
      win_get_url:
        url: "{{ files_download_url }}/{{ item }}"
        dest: "{{ role_tmpdir }}/{{  item }}"
      changed_when: False
      with_items:
        - wmf51.cab

    - name: install WMF 5.1
      win_shell: "Add-WindowsPackage -Online -NoRestart -PackagePath {{ role_tmpdir + '\\wmf51.cab' }} | ConvertTo-Json"
      register: _result
#      failed_when: result.rc not in [0, 3010]

    - name: Get result
      set_fact:
        result: "{{ _result.stdout|from_json }}"

    - name: Reboot VM
      win_reboot:
        shutdown_timeout_sec: 3600
        reboot_timeout_sec: 3600
      when: result.RestartNeeded

    when: ansible_os_name is match("Microsoft\ Windows\ Server\ 2012\ R2.*")

  - name: Really wake up WinRM
    win_ping:
      data: success
    ignore_errors: true
    with_sequence: count=20

  - name: Remove temp directory
    win_file:
      path: "{{ role_tmpdir }}"
      state: absent
    changed_when: False

  - name: Reset proxy settings if set before
    win_command: netsh winhttp reset proxy
    when: cloud_params.proxy_host is defined

#  - name: Reconfigure Windows repair source
#    win_regedit:
#      path: HKLM:\Software\Microsoft\Windows\CurrentVersion\policies\Servicing
#      type: dword
#      name: RepairContentServerSource
#      state: absent
#    when: cloud_params.wsus.wsus_client_enable

